#!/bin/zsh

################### Personal Aliases ###################

# Modify prompt colors
PS1="%F{magenta}[bryce %1~]%f %# "

# Shell command aliases
alias la='ls -laFh'
alias rewq='clear'
alias time='/usr/bin/time'

# True clear screen command
alias clearTerminalBuffer="printf '\033[2J\033[3J\033[1;1H'"
alias cb=clearTerminalBuffer

# Neovim shortcuts
alias vi=nvim
alias vim=nvim

# Source zshrc
alias szsh='source ~/.zshrc'
alias ezsh='source ~/.zsh/user_files/aliases'

# Mac specific aliases
if [[ "$OSTYPE" == "darwin"* ]]; then

    # Ubuntu Multipass shortcuts
    alias mp='multipass'
    alias mps='multipass shell'

else

    # Linux specific aliases
    alias apt-install='sudo apt install -y'
fi

# Add words to cspell dictionary
DICT_PATH=~/.config/cspell/words.txt
addword() {

	if [[ $# -lt 1 ]]; then
		return 1
	fi

	unset INPUT_FILE

	while [[ $# -gt 0 ]]; do
		
		ARG=$1
		shift

		case $ARG in 
		"-h")
			echo "Usage: $0 [-h] [-f <file>] -- [words...]"
			echo "Saves unknown words to $DICT_PATH"
			echo ""
			return 0
			;;
		"-f")
			INPUT_FILE=$1
			shift;
			;;
		"--")
			break;
			;;
		esac
	done

	declare -a WORDS
	WORDS+=($@)

	if [[ -n $INPUT_FILE ]];then 
		if [[ -f $INPUT_FILE ]]; then
			WORDS+=($(cspell --words-only --unique --quiet $INPUT_FILE))
		else
			echo "$INPUT_FILE not found!"
		fi
	fi
	
	for WORD in ${WORDS[@]}; do
		echo "$WORD" >>$DICT_PATH
	done

	# Remove duplicates
	sort --ignore-case -u -o $DICT_PATH <$DICT_PATH
}

#################### School Aliases ####################

start_vpn() {

    launchctl load -wF /Library/LaunchAgents/com.paloaltonetworks.gp.pangpa.plist && /Applications/GlobalProtect.app/Contents/MacOS/GlobalProtect &

	if [[ $? -ne 0 ]]; then
		exit 1
	fi
}

# Function for logging into the CalPoly Unix servers
cp_login() {

    # Default server is unix4, as it the lowest chance of being busy
    local SRV='4'

    # Check if user specified unix server
    if [[ "$#" -ge 1 ]]; then

        # Check args
        if [[ $1 -eq "-s" ]]; then
            SRV="$2"
        else
            SRV="$1"
        fi

        # Make sure the entry is valid and in the range 1 - 5 (inclusive)
        if [[ ! $SRV =~ ^-?[0-9]+$ ]] || [[ $SRV -lt 1 ]] || [[ $SRV -gt 5 ]]; then
            echo "Fatal: invalid server selection"
            echo "usage: $0 [-s [1-5]]" >&2
            return 1
        fi
    fi

    # Generate the ssh command
    local SSH_CMD="ssh bmelande@unix$SRV.csc.calpoly.edu"

    # Pompt
    echo "Logging into unix$SRV.csc.calpoly.edu..."
    echo $SSH_CMD

    # Execute the command
    eval $SSH_CMD

}

# Auto login to unix4
alias fdsa='cp_login -s 4'

# Function for starting the CSC453_Arm Virtual Machine and automattically
# connecting to it
vm() {

    vm_error() {
        echo "An error occurred while running $1!"
        echo "Please investigate and try again, exiting..."

        exit 1
    }

    local VM_NAME="CSC453_Arm_VM"

    echo "Starting the VM..."
    utmctl start $VM_NAME

    if [[ $? -ne 0 ]]; then
        vm_error "utmclt start"
    fi

    echo "Connecting to the VM..."
    utmctl start $VM_NAME

    if [[ $? -ne 0 ]]; then
        vm_error "utmclt start"
    fi
}


